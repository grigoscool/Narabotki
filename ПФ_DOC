Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СоглашениеСКлиентом") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СоглашениеСКлиентом", НСтр("ru = 'Соглашение с клиентом'"), СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
	КонецЕсли; 
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ИТПл_Спецификация");
	
	Если ПечатнаяФорма <> Неопределено Тогда
		//++ИТПл ГригорьевСВ 15.08.2023
		Для каждого Соглашение Из МассивОбъектов Цикл
		    Если НЕ Соглашение.Согласован Тогда
			    Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Распечатать соглашение №%1 нельзя, т.к. оно не согласовано.", Соглашение.Номер);
				Сообщение.Сообщить();
				Возврат;
			КонецЕсли;
		КонецЦикла;
		//--ИТПл ГригорьевСВ 15.08.2023
		ПечатнаяФорма.ОфисныеДокументы = НапечататьДоговор(МассивОбъектов);
		ПечатнаяФорма.СинонимМакета = Нстр("ru = 'Спецификация'");		
	КонецЕсли;
	
КонецПроцедуры


Функция НапечататьДоговор(МассивОбъектов)

	ОфисныеДокументы = Новый Соответствие;
	
	Шаблон = "Спецификация [Номер] от [Дата]";
	ЗначенияРеквизитовДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивОбъектов, "Номер, Дата, Ссылка");

	Для каждого Ссылка Из МассивОбъектов Цикл
		
		РеквизитыДокумента = ЗначенияРеквизитовДокумента[Ссылка];
		РеквизитыДокумента.Дата = Формат(РеквизитыДокумента.Дата, "ДЛФ=DD");
		РеквизитыДокумента.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер);
		
		ИмяДокумента = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон,РеквизитыДокумента);
		
		АдресХранилищаОфисныйДокумент = СформироватьДоговор(Ссылка);
		
		ОфисныеДокументы.Вставить(АдресХранилищаОфисныйДокумент, ИмяДокумента);
		
	КонецЦикла;	
	                                     	
	Возврат ОфисныеДокументы;
	
КонецФункции

Функция СформироватьДоговор(Соглашение)  
	
	//НаправлениеДеятельностиБетон = Константы.ИТПл_НаправлениеДеятельностиБетон.Получить();
	//НаправлениеДеятельностиНерудные = Константы.ИТПл_НаправлениеДеятельностиНерудныеМатериалы.Получить();
    НомерСпецификации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "Номер");
	
	МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Справочник.СоглашенияСКлиентами.ПФ_DOC_ИТПл_Спецификация");
	Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);
	
	ОписаниеОбластей = Новый Структура;

	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Приложение1СпецШапка", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "НовоеСоглашение", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТаблицыТовары", "Общая");	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "СтрокаТаблицыТовары", "СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТаблицыУслугиАБН", "Общая");	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "СтрокаТаблицыУслугиАБН", "СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Приложение1СпецПодвал", "Общая");
	
	ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДоговорыКонтрагентов.Дата КАК ДатаДоговора,
	               |	ДоговорыКонтрагентов.Номер КАК НомерДоговора,
	               |	ДоговорыКонтрагентов.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	               |	ДоговорыКонтрагентов.Контрагент КАК Контрагент,
	               |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	               |	ДоговорыКонтрагентов.БанковскийСчет КАК БанковскийСчет,
	               |	ДоговорыКонтрагентов.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	               |ПОМЕСТИТЬ ВТ_Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Ссылка = &Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Контрагенты.НаименованиеПолное КАК ПолноеНаименованиеКонтрагента,
	               |	Контрагенты.Наименование КАК КороткоеНаименованиеКонтрагента,
	               |	Контрагенты.Наименование КАК Покупатель,
	               |	Контрагенты.ИНН КАК ИНН,
	               |	Контрагенты.КПП КАК КПП,
	               |	Контрагенты.Ссылка КАК Контрагент,
	               |	Контрагенты.Партнер КАК Партнер,
	               |	Контрагенты.КодПоОКПО КАК КодПоОКПО,
	               |	Контрагенты.Партнер.ИТПл_ОГРН КАК ОГРН
	               |ПОМЕСТИТЬ ВТ_Контрагенты
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_Договоры.Контрагент
	               |			ИЗ
	               |				ВТ_Договоры)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	КонтактныеЛицаПартнеров.Наименование КАК Наименование,
	               |	КонтактныеЛицаПартнеров.Владелец КАК Владелец
	               |ПОМЕСТИТЬ ВТ_Подписант
	               |ИЗ
	               |	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	               |ГДЕ
	               |	КонтактныеЛицаПартнеров.Владелец В
	               |			(ВЫБРАТЬ
	               |				ВТ_Контрагенты.Партнер
	               |			ИЗ
	               |				ВТ_Контрагенты)
	               |	И КонтактныеЛицаПартнеров.ДолжностьПоВизитке = ""Подписант договора""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	БанковскиеСчетаКонтрагентов.Банк КАК Банк,
	               |	БанковскиеСчетаКонтрагентов.КоррСчетБанка КАК КоррСчет,
	               |	БанковскиеСчетаКонтрагентов.НомерСчета КАК РасчСчет,
	               |	БанковскиеСчетаКонтрагентов.БИКБанка КАК БИК,
	               |	БанковскиеСчетаКонтрагентов.Ссылка КАК Ссылка,
	               |	БанковскиеСчетаКонтрагентов.Владелец КАК Владелец
	               |ПОМЕСТИТЬ ВТ_БанковскийСчет
	               |ИЗ
	               |	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	               |ГДЕ
	               |	ВЫРАЗИТЬ(БанковскиеСчетаКонтрагентов.Владелец КАК Справочник.Контрагенты) В
	               |			(ВЫБРАТЬ
	               |				Вт_Договоры.Контрагент
	               |			ИЗ
	               |				Вт_Договоры)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СоглашенияСКлиентами.Ссылка КАК Ссылка,
	               |	СоглашенияСКлиентами.ИТПлДоговор КАК ИТПлДоговор,
	               |	СоглашенияСКлиентами.Номер КАК Номер
	               |ПОМЕСТИТЬ ВТ_Соглашение
	               |ИЗ
	               |	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	               |ГДЕ
	               |	СоглашенияСКлиентами.ИТПлДоговор В
	               |			(ВЫБРАТЬ
	               |				ВТ_Договоры.Ссылка
	               |			ИЗ
	               |				ВТ_Договоры)
	               |	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	СоглашенияСКлиентамиИТПлАдресаДоставки.АдресДоставки КАК АдресДоставки,
	               |	ВТ_Соглашение.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_АдресДоставки
	               |ИЗ
	               |	ВТ_Соглашение КАК ВТ_Соглашение
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ИТПлАдресаДоставки КАК СоглашенияСКлиентамиИТПлАдресаДоставки
	               |		ПО ВТ_Соглашение.Ссылка = СоглашенияСКлиентамиИТПлАдресаДоставки.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Контрагенты.ПолноеНаименованиеКонтрагента КАК ПолноеНаименованиеКонтрагента,
	               |	ВТ_Контрагенты.КороткоеНаименованиеКонтрагента КАК КороткоеНаименованиеКонтрагента,
	               |	ВТ_Контрагенты.Покупатель КАК Покупатель,
	               |	ВТ_Контрагенты.ИНН КАК ИНН,
	               |	ВТ_Контрагенты.КПП КАК КПП,
	               |	ВТ_Контрагенты.Контрагент КАК Контрагент,
	               |	ВТ_Договоры.ДатаДоговора КАК ДатаДоговора,
	               |	ВТ_Договоры.НомерДоговора КАК НомерДоговора,
	               |	ВТ_Договоры.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	               |	ВТ_БанковскийСчет.Банк КАК Банк,
	               |	ВТ_БанковскийСчет.КоррСчет КАК КоррСчет,
	               |	ВТ_БанковскийСчет.РасчСчет КАК РасчСчет,
	               |	ВТ_БанковскийСчет.БИК КАК БИК,
	               |	ВТ_Договоры.Ссылка КАК Договор,
	               |	ВТ_Подписант.Наименование КАК Подписант,
	               |	ВТ_Договоры.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	               |	ВТ_Договоры.БанковскийСчет КАК БанковскийСчет,
	               |	ВТ_АдресДоставки.АдресДоставки КАК АдресДоставки,
	               |	ВТ_Контрагенты.КодПоОКПО КАК ОКПО,
	               |	ВТ_Контрагенты.ОГРН КАК ОГРН
	               |ИЗ
	               |	ВТ_Договоры КАК ВТ_Договоры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Контрагенты КАК ВТ_Контрагенты
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Подписант КАК ВТ_Подписант
	               |			ПО ВТ_Контрагенты.Партнер = ВТ_Подписант.Владелец
	               |		ПО ВТ_Договоры.Контрагент = ВТ_Контрагенты.Контрагент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Соглашение КАК ВТ_Соглашение
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АдресДоставки КАК ВТ_АдресДоставки
	               |			ПО ВТ_Соглашение.Ссылка = ВТ_АдресДоставки.Ссылка
	               |		ПО ВТ_Договоры.Ссылка = ВТ_Соглашение.ИТПлДоговор
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БанковскийСчет КАК ВТ_БанковскийСчет
	               |		ПО ВТ_Договоры.БанковскийСчетКонтрагента = ВТ_БанковскийСчет.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.НомерСтроки КАК НС,
	               |	Товары.Цена КАК Цена,
	               |	Товары.ВидЦены КАК ВидЦены,
	               |	ВЫБОР
	               |		КОГДА Товары.СрокПоставки = 0
	               |			ТОГДА """"
	               |	КОНЕЦ КАК СрокПоставки,
	               |	Товары.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм
	               |ИЗ
	               |	ВТ_Соглашение КАК ВТ_Соглашение
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК Товары
	               |		ПО ВТ_Соглашение.Ссылка = Товары.Ссылка
	               |ГДЕ
	               |	Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	               |	И НЕ Товары.Номенклатура.Наименование ПОДОБНО ""% ПМД%""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Услуги.Номенклатура КАК Услуга,
	               |	Услуги.НомерСтроки КАК НС,
	               |	Услуги.Цена КАК Цена
	               |ИЗ
	               |	ВТ_Соглашение КАК ВТ_Соглашение
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК Услуги
	               |		ПО ВТ_Соглашение.Ссылка = Услуги.Ссылка
	               |ГДЕ
	               |	Услуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)";   
	
	Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "ИТПлДоговор");
	Запрос.УстановитьПараметр("Договор", Договор); 
	Запрос.УстановитьПараметр("ИмяСвойства", "ПМД_a5bc63a5267d4c8ebe26ed877c08b4ab");
	Запрос.УстановитьПараметр("НаименованиеЗначенияСвойства", "Без ПМД");
	//Запрос.УстановитьПараметр("НаправлениеДеятельностиБетон", НаправлениеДеятельностиБетон);
	//Запрос.УстановитьПараметр("НаправлениеДеятельностиНерудные", НаправлениеДеятельностиНерудные);
	
	ДанныеДляПечати = Запрос.ВыполнитьПакет();
	
	Шапка = ДанныеДляПечати[6].Выгрузить();
	Товары = ДанныеДляПечати[7].Выгрузить();
	Услуги = ДанныеДляПечати[8].Выгрузить();
	
	ДанныеШапка = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Шапка[0]);
		
	ДанныеТовары = ОбщегоНазначения.ТаблицаЗначенийВМассив(Товары);
	ДанныеУслуги = ОбщегоНазначения.ТаблицаЗначенийВМассив(Услуги);
	
	ДанныеШапка.Вставить("ГодОкончанияДействияДоговора", Формат(ДанныеШапка["ДатаОкончанияДействия"], "ДФ='yyyy'"));
	ДанныеШапка.Вставить("ДатаМесяцОкончанияДействияДоговора", Формат(ДанныеШапка["ДатаОкончанияДействия"], "ДФ='dd MMMM'"));	
	ДанныеШапка.Вставить("ЮридическийАдрес", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеШапка["Контрагент"], 												
							Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента, ДанныеШапка["ДатаДоговора"]));
	ДанныеШапка.Вставить("ФактическийАдрес", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеШапка["Контрагент"], 												
							Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, ДанныеШапка["ДатаДоговора"]));	
	ДанныеШапка.Вставить("ПочтовыйАдрес", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеШапка["Контрагент"], 												
							Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента, ДанныеШапка["ДатаДоговора"]));
	ДанныеШапка.Вставить("Email", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеШапка["Контрагент"], 												
							Справочники.ВидыКонтактнойИнформации.EmailКонтрагента, ДанныеШапка["ДатаДоговора"]));
	ДанныеШапка.Вставить("Телефон", УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(ДанныеШапка["Контрагент"], 												
							Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, ДанныеШапка["ДатаДоговора"]));						
	ДанныеШапка["ДатаДоговора"] = Формат(ДанныеШапка["ДатаДоговора"], "ДФ=dd.MM.yyyy");		
	ДанныеШапка["Подписант"] = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(Строка(ДанныеШапка["Подписант"]));
	ДанныеШапка.Вставить("НомерСпецификации", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "Номер"));
	
	//Приложение1 Спецификация шапка
	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Приложение1СпецШапка"]);
	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);	
	
	Если НомерСпецификации <> "1" Тогда
	
		//Приложение1 Спецификация если номер не первый, то это доп соглашение
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["НовоеСоглашение"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);		
	
	КонецЕсли;

	
	Если Товары.Количество() > 0 Тогда
	
		//Приложение1 Товары
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ШапкаТаблицыТовары"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, Ложь);
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["СтрокаТаблицыТовары"]);
		УправлениеПечатью.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ДанныеТовары);	                                                           
		
	КонецЕсли;
	
	Если Услуги.Количество() > 0 Тогда  
		
		//Приложение1 Услуги
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ШапкаТаблицыУслугиАБН"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, Ложь);	
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["СтрокаТаблицыУслугиАБН"]);
		УправлениеПечатью.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма, Область, ДанныеУслуги); 	

	КонецЕсли;

	//Приложение1 Спецификация подвал
	Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Приложение1СпецПодвал"]); 	
	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеШапка);	
	
	//Колонтитулы 
	ОбластьВерхнийКолонтитул = Новый Структура;
	ОбластьВерхнийКолонтитул.Вставить("ИмяОбласти", "ВерхнийКолонтитул");
	ОбластьВерхнийКолонтитул.Вставить("ТипОбласти", "ВерхнийКолонтитул");
		
	Область = УправлениеПечатью.ОбластьМакета(Макет, ОбластьВерхнийКолонтитул);  
	УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, Ложь);
	//Колонтитулы
	
	АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
		
	Возврат АдресХранилищаПечатнойФормы;
	
КонецФункции
