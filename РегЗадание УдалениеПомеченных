Процедура УдалениеПомеченныхЗапускРегЗадания() Экспорт
	
	СрокХранения = Константы.ИТПлСрокХраненияПомеченныхНаУдаление.Получить();
	
	Если СрокХранения = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ИмяСобытияЖР = "Удаление помеченных";
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР,
							УровеньЖурналаРегистрации.Информация,
							Метаданные.РегламентныеЗадания.ИТПлУдалениеПомеченных,,
							"Запуск задания");
							
	Результат = УдалениеПомеченных();
	
	ШаблонСообщения = "Удалено %1 из %2";
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
																			Результат.КоличествоУдалено,
																			Результат.КоличествоСсылок);
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР,
							УровеньЖурналаРегистрации.Информация,
							Метаданные.РегламентныеЗадания.ИТПлУдалениеПомеченных,,
							Комментарий);	
	
КонецПроцедуры //!- ИТПл Пчелов_ИА #1966 02.11.2022

//++ ИТПл Пчелов_ИА #1966 02.11.2022
Функция УдалениеПомеченных() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("КоличествоСсылок", 0);
	Результат.Вставить("КоличествоУдалено",0);
	
	УстановитьПривилегированныйРежим(Истина);
	
	СрокХранения = Константы.ИТПлСрокХраненияПомеченныхНаУдаление.Получить();
	
	Если СрокХранения = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	МетаОбъекты = Новый Массив;
	МетаОбъекты.Добавить(Метаданные.Документы.ПоступлениеТоваровУслуг);
	
	ШаблонЗапроса = "ВЫБРАТЬ
					|	Т.Ссылка КАК Ссылка
					|ИЗ %1 КАК Т
					|ГДЕ
					|	Т.ПометкаУдаления
					|	И Т.Дата < &ПериодХранения";
	
	МассивТекстов = Новый Массив;
	
	Для каждого МетаОбъект Из МетаОбъекты Цикл
		
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗапроса,
																				МетаОбъект.ПолноеИмя());
																				
		МассивТекстов.Добавить(ТекстЗапроса);																				
		
	КонецЦикла; 
	
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивТекстов, Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ПериодХранения", НачалоДня(ТекущаяДата()) - СрокХранения*24*60*60);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли; 
	
	ИсключаемыеМета = Новый Массив;
	
	Для каждого МетаРегистр Из Метаданные.РегистрыСведений Цикл
		
		ИзмеренияТипа = Новый Массив;
		
		Для каждого МетаИзмерение Из МетаРегистр.Измерения Цикл
			
			Для Каждого Тип Из МетаИзмерение.Тип.Типы() Цикл
				
				МетаТипа = Метаданные.НайтиПоТипу(Тип);
				
				Для Каждого МетаДляУдаленияПомеченных Из МетаОбъекты Цикл
					
					Если МетаТипа = МетаДляУдаленияПомеченных Тогда
						ИзмеренияТипа.Добавить(МетаИзмерение);
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ИзмеренияТипа.Количество() Тогда
			
			ДобавлятьВИсключения = Истина;
			
			Для каждого МетаИзмерение Из ИзмеренияТипа Цикл
				
				Если НЕ МетаИзмерение.Ведущее Тогда
					ДобавлятьВИсключения = Ложь;
				КонецЕсли; 
				
			КонецЦикла; 
			
			Если ДобавлятьВИсключения Тогда
				ИсключаемыеМета.Добавить(МетаРегистр);
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	СписокПомеченных = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	ТаблицаИспользуемых = НайтиПоСсылкам(СписокПомеченных,,,ИсключаемыеМета);
	
	УдаляемыеСсылки = ОбщегоНазначенияКлиентСервер.СократитьМассив(СписокПомеченных, ТаблицаИспользуемых.ВыгрузитьКолонку(ТаблицаИспользуемых.Колонки[0]));
	
	Результат.КоличествоСсылок = СписокПомеченных.Количество();
	Результат.КоличествоУдалено = УдаляемыеСсылки.Количество(); 
	
	УдалитьОбъекты(УдаляемыеСсылки);
		
	Возврат Результат;
	
КонецФункции 
