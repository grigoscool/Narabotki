  ---  ДЛЯ ВНЕШНИХ ОТЧЕТОВ КОНТЕКСТНЫЙ
1. В МО Отчета

Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.События.ПриСозданииНаСервере = Истина;

КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
// См. также ФормаКлиентскогоПриложения.ПриСозданииНаСервере в синтакс-помощнике.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
		ОбъектыНазначения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Форма.Параметры, "ОбъектыНазначения");
	Если ОбъектыНазначения <> Неопределено Тогда
		Форма.ФормаПараметры.Отбор.Вставить("Ссылка", ОбъектыНазначения);
	КонецЕсли;

	
КонецПроцедуры

 --- ДЛЯ ВНУТРЕННИХ ОТЧЕТОВ КОНТЕКСТНЫЙ
1. В ММ объекта из которого вызываем

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт

	// !+ ИТПл Григорьев_СВ 2024-05-29 #3056
	КомандаОтчет = Отчеты.ИТПлРасхожденияПриОтгрузке.ДобавитьКомандуОтчета(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента,ФормаСписка";
		КомандаОтчет.Важность = "Обычное";
		КомандаОтчет.Обработчик = "уатОбщегоНазначенияКлиент.ИТПлРасхожденияПриОтгрузке";
	КонецЕсли;
	// !- ИТПл Григорьев_СВ 2024-05-29

2. В ММ Отчета создание команды
#Область КомандыПодменюОтчеты

// Добавляет команду отчета в список команд.
// 
// Параметры:
//   КомандыОтчетов - см. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
// Возвращаемое значение:
// 	СтрокаТаблицыЗначений
Функция ДобавитьКомандуОтчета(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ИТПлРасхожденияПриОтгрузке) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		
		КомандаОтчет.Менеджер = Метаданные.Отчеты.ИТПлРасхожденияПриОтгрузке.ПолноеИмя();
		КомандаОтчет.Представление = НСтр("ru = 'Расхождения при отгрузке (ИТПл)'");
		
		КомандаОтчет.РежимЗаписи = "Записывать";
		КомандаОтчет.МножественныйВыбор = Истина;
		КомандаОтчет.Важность = "Обычное";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти
3. Обработчик в общем модуле 
Процедура ИТПлРасхожденияПриОтгрузке(МассивСсылкокНаОбъект, ПараметрыВыполнения) Экспорт

	Если МассивСсылкокНаОбъект.Количество() Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("СборочныйЛист", МассивСсылкокНаОбъект);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", Отбор);
		ПараметрыФормы.Вставить("КлючНазначенияИспользования", "РасхожденияПриОтгрузке");
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		
		ОткрытьФорму("Отчет.ИТПлРасхожденияПриОтгрузке.Форма", ПараметрыФормы);
		
	КонецЕсли;

КонецПроцедуры // !- ИТПл Григорьев_СВ 2024-05-29


  --- ДЛЯ ВНУТРЕННИХ ОТЧЕТОВ ПОДКЛЮЧЕНИЕ ПЕРЕОПРЕДЕЛЕНИЯ СОБЫТИЙ ФОРМЫ
1. Речь идет о встроенном отчете (не о внешнем подключаемом). В моем примере это ОтчетСверка.
Нужно передать значения, которые должны установиться в Параметры данных отчета.
Передаем параметры через обычные параметры формы:
    ПараметрыОтчетаСверки = Новый Структура();
    ПараметрыОтчетаСверки.Вставить("Переток", Переток);
    ПараметрыОтчетаСверки.Вставить("ОтчетныйПериод", 
        ОбщегоНазначенияУОРКлиентСервер.СтандартныйПериодОтчетногоПериода(Объект.ОтчетныйПериод));
    ПараметрыОтчетаСверки.Вставить("СформироватьПриОткрытии", Истина);
    
    ОткрытьФорму("Отчет.ОтчетСверка.Форма", ПараметрыОтчетаСверки, ЭтаФорма, Переток);


2. Вписываемся в ВариантыОтчетовПереопределяемый:
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

    ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ОтчетСверка);    
КонецПроцедуры

Это позволит задать параметры, которые планируем менять.

3. Прописываем обработчик в ММ отчета:
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
    НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
КонецПроцедуры

Сообщаем, что хотим донастраивать настройки формы.

4. В модуле отчета прописываем, что хотим ловить определенные события:
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
    Настройки.События.ПриСозданииНаСервере = Истина; // Это на всяк случай вытащил
    Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина; // Это для махинаций с параметрами
КонецПроцедуры


5. В модуле объекта прописываем обработчик события ПередЗагрузкойНастроекВКомпоновщик. Его код моем предыдущем посте.
При открытии формы, в параметр Контекст передается форма отчета. В ней прочитываем параметры, которые передали действием п.1.
Но при переформировании отчета Контекст уже приходит другой (не анализировал, откуда он формируется).

6. Обновляем метаданные - запускаемся с ключом /С ЗапуститьОбновлениеИнформационнойБазы .
