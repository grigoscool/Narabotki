&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыРедактирования();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыРедактирования()

    ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	// Основная схема компоновки или можно указать конкретный макет
	ОсновнаяСхемаКомпоновки = ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	// найдем нужное нам поле набора данных
	// наборов данных может быть много, поэтому указывайте тот который вам нужен
	Поле_Валюта = ОсновнаяСхемаКомпоновки.НаборыДанных.НаборДанных1.Поля.Найти("Валюта");
	Если НЕ Поле_Валюта = Неопределено Тогда
		// Найдем в параметрах редактирования нужную настройку "ПараметрыВыбора"
		ПараметрыВыбора = Поле_Валюта.ПараметрыРедактирования.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ПараметрыВыбора"));
		Если НЕ ПараметрыВыбора = Неопределено Тогда
			// Добавим новый параметр выбора
			// в нашем случае мы хотим поставить отбор по элементам справочника "Руб" и "EUR"
			НовыйПараметрВыбора = ПараметрыВыбора.Значение.Добавить();
			// "Отбор." означает, что форма выбора автоматически откроется с указанным отбором
			// в Форме выбора поле "Ссылка" дожно иметь признак обязательного использования
			НовыйПараметрВыбора.Имя = "Отбор.Ссылка";
			// значения отбора вы можете получить как угодно, в данном примере найдем по коду
			ОтборПоЭлементам = Новый Массив();
			ОтборПоЭлементам.Добавить(Справочники.Валюты.НайтиПоКоду("643"));
			ОтборПоЭлементам.Добавить(Справочники.Валюты.НайтиПоКоду("978"));
			// присвоим значение отбора
			НовыйПараметрВыбора.Значение = ОтборПоЭлементам;
			// установим признак использования нашей настройки
			ПараметрыВыбора.Использование = Истина;
		КонецЕсли;
		// также можно и заменить стандартную форму выбора
		ФормаВыбора = Поле_Валюта.ПараметрыРедактирования.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ФормаВыбора")); 
		Если НЕ ФормаВыбора = Неопределено Тогда
			ФормаВыбора.Значение = "Справочник.Валюты.Форма.ФормаСписка";		
			ФормаВыбора.Использование = Истина;
		КонецЕсли;	
	КонецЕсли;	
	
	// далее необходимо наши настройки загрузить в компоновщик 
	АдресСхемы = ПоместитьВоВременноеХранилище(ОсновнаяСхемаКомпоновки,Новый УникальныйИдентификатор());
	// тут и происходит инициализация наших настроек
	ОтчетОбъект.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));	
	ОтчетОбъект.КомпоновщикНастроек.ЗагрузитьНастройки(ОсновнаяСхемаКомпоновки.НастройкиПоУмолчанию);
		
	ЗначениеВРеквизитФормы(ОтчетОбъект,"Отчет");



ИЛИ


// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - Структура - Настройки общей формы отчета (для изменения).
//       См. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

	Настройки.ФормироватьСразу = Истина;
	Настройки.События.ПриСозданииНаСервере = Истина;

КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
// См. также ФормаКлиентскогоПриложения.ПриСозданииНаСервере в синтакс-помощнике.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ОбъектыНазначения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Форма.Параметры, "ОбъектыНазначения");
	Если ОбъектыНазначения <> Неопределено Тогда
		Форма.ФормаПараметры.Отбор.Вставить("Ссылка", ОбъектыНазначения);
	КонецЕсли;
	
	//СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	ПараметрыВыбора = СхемаКомпоновкиДанных.Параметры.ВидЦеныМЦП.ПараметрыРедактирования;
	
	ПараметрВыбора = ПараметрыВыбора.Элементы.Найти(Новый ПараметрКомпоновкиДанных("ПараметрыВыбора"));
	НовыйПараметрВыбора = ПараметрВыбора.Значение.Добавить();
	НовыйПараметрВыбора.Имя = "Отбор.Родитель";
	Родитель = Справочники.ВидыЦен.НайтиПоНаименованию("Рекомендованная регулярная цена");
	НовыйПараметрВыбора.Значение = Родитель;
	ПараметрВыбора.Использование = Истина;

	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных,Новый УникальныйИдентификатор());
	// тут и происходит инициализация наших настроек
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	
КонецПроцедуры


	
КонецПроцедуры
 
