--- Вопрос о необходимости записи
&НаКлиенте
Процедура ПровестиРеализации(Команда)
	Если Модифицированность Тогда
		Оповещение = Новый ОписаниеОповещения("ПровестиРеализацииЗавершение", ЭтаФорма);
		ТекстВопроса = НСтр("ru = 'Необходимо провести документ для выполнения операции. Провести документ?'");
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	ПровестиРеализацииНаСервере();
КонецПроцедуры 

Процедура ПровестиРеализацииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Нет ИЛИ РезультатВопроса = Неопределено Тогда
		Возврат;
	ИначеЕсли НЕ Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение) Тогда  // проводим если ответ да или записали, иначе возврат
		Возврат;
	КонецЕсли;
	ПровестиРеализацииНаСервере();
КонецПроцедуры


--- Оповещение пользователя по завершению алгоритма
ПоказатьОповещениеПользователя("Данные заполнены", ПолучитьНавигационнуюСсылку(ПоследняяДобавленнаяСсылка), 
	"Открыть последний добавленный товар", БиблиотекаКартинок.Справочник , СтатусОповещенияПользователя.Важное);


--- Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "";
	Сообщение.УстановитьДанные(Объект); //ЭтотОбъект - устанавливает объект откуда беруться данные
	Сообщение.Поле = "Товары[" + (ТекСтрока.НомерСтроки-1) + "].Количество"; // берет данные из уст объекта
	Сообщение.Поле = "Объект.Товары[" + (ТекСтрока.НомерСтроки-1) + "].Количество"; // если объект не уст, то можно прописать полный путь
	Сообщение.Сообщить();


--- Отправка письма на почту

ТипыКИ = Новый Массив;
ТипыКИ.Добавить(Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);

Объекты = Новый Массив();
ДиректорМТО = Константы.Расш1_ДиректорМТО.Получить();

Если Не ЗначениеЗаполнено(ДиректорМТО) Тогда
    
    Сообщить("Не удалось сформировать письмо об изменении статуса заказа клиента! Установите значение константы ""Директор МТО""!");
    Возврат;	

КонецЕсли;

Объекты.Добавить(Константы.Расш1_ДиректорМТО.Получить());
АдресаПолучателяМассив = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(Объекты, ТипыКИ,,ТекущаяДатаСеанса());    

Если Не АдресаПолучателяМассив.Количество() Тогда

    Сообщить("Не удалось сформировать письмо об изменении статуса заказа клиента! Не удалось получить данные по почте Директора МТО!");
    Возврат;

КонецЕсли;

АдресаПолучателя = АдресаПолучателяМассив[0].Представление; 

ТекстПисьма = "Автоинформирование об изменении статуса заказа клиента. Необходимо выполнить дальнейшие действия по бизнес-процессу.";

ШаблонСтрокДанных = Символы.ПС + "Клиент: %1
|Контрагент: %2
|Заказ клиента: %3
|Сделка: %4
|Новый статус заказа: %5
|Приоритет: %6";

СтрокиДанных = СтрШаблон(ШаблонСтрокДанных, Партнер,Контрагент,Ссылка,Сделка,"К выполнению",Приоритет); 
ТекстПисьма = ТекстПисьма + СтрокиДанных; 


ПараметрыСообщения = Новый Структура;
ПараметрыСообщения.Вставить("Кому",     АдресаПолучателя);
ПараметрыСообщения.Вставить("Тема",     "Изменении статуса заказа клиента");
ПараметрыСообщения.Вставить("Тело",     ТекстПисьма);
ПараметрыСообщения.Вставить("Вложения", Новый Массив); 

СистемнаяУчётнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;

Попытка
    
    НовоеПисьмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(СистемнаяУчётнаяЗапись,ПараметрыСообщения);
    РаботаСПочтовымиСообщениями.ОтправитьПисьмо(СистемнаяУчётнаяЗапись, НовоеПисьмо);
    Сообщить("Было сформировано письмо об изменении статуса заказа клиента.");
    
Исключение
     Сообщить("Не удалось сформировать письмо об изменении статуса заказа клиента!"); 
КонецПопытки;
////////////////////////////////////////////////////////////////////////////////
ПараметрыПисьма = Новый Структура;
ПараметрыПисьма.Вставить("Кому", АдресаКоторымОтправляемПисьма);
ПараметрыПисьма.Вставить("УчетнаяЗапись", ПочтаОтправителя);                                                               
ПараметрыПисьма.Вставить("АдресОтвета", АдресаКоторымОтправляемПисьма);
ПараметрыПисьма.Вставить("Тема", ТемаПисьма);	
ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
ПараметрыПисьма.Вставить("ТипТекста", "ПростойТекст");
РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(ПочтаОтправителя, ПараметрыПисьма);



--- Отправка письма на почту

	ПараметрыПисьма = Взаимодействия.ПараметрыПисьмаДляОтправки(НовыйДокумент);
	Письмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(НовыйДокумент.УчетнаяЗапись, ПараметрыПисьма);

	Попытка
		РезультатОтправки = РаботаСПочтовымиСообщениями.ОтправитьПисьмо(НовыйДокумент.УчетнаяЗапись, Письмо); 
		НовыйДокумент.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
		НовыйДокумент.ДатаОтправления = ТекущаяДатаСеанса();
		НовыйДокумент.Записать();
		ТекстСообщения = Нстр("ru = 'Сообщение отправлено.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Исключение
		ТекстОшибки = РаботаСПочтовымиСообщениями.РасширенноеПредставлениеОшибки(
			ИнформацияОбОшибке(), ОбщегоНазначения.КодОсновногоЯзыка());
		
		ЗаписьЖурналаРегистрации(УправлениеЭлектроннойПочтой.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Ошибка, , НовыйДокумент.Ссылка, ТекстОшибки);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

--- ОТПРАВКА ПИСЬМА НА ПОЧТУ (ПРОГРАМНОЕ ФОРМИРОВАНИЕ И ОТПРАВКА)

АЛГОРИТМ СОЗДАНИЯ ЭЛЕКТРОННОГО ПИСЬМА:

// Получим менеджер печати
ИмяМенеджераПечати = "Документ.ЗаказКлиента";
МенеджерПечати = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяМенеджераПечати);
// Подготовка параметров
МассивОбъектов = Новый Массив;
МассивОбъектов.Добавить(ОбъектДок.Ссылка);
ОбъектыПечати = Новый СписокЗначений;
ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();

// Формируем печатный документ Заказа клиента
Таб = МенеджерПечати.СформироватьПечатнуюФормуЗаказаКлиента(МассивОбъектов, ОбъектыПечати, ПараметрыВывода);

// Создаем документ Электронное письмо
НачатьТранзакцию();
ЭлПисьмо = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
ЭлПисьмо.УстановитьНовыйНомер();
ЭлПисьмо.Автор = ПараметрыСеанса.ТекущийПользователь;
ЭлПисьмо.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
ЭлПисьмо.Дата = ТекущаяДата();
ЭлПисьмо.ДатаОтправления = ТекущаяДата();
ЭлПисьмо.Ответственный = ПараметрыСеанса.ТекущийПользователь;

// Получаем адрес эл. почты партнера
ПолучательАдрес = УправлениеКонтактнойИнформацией.ПолучитьКонтактнуюИнформацияОбъекта(ОбъектДок.Партнер, Справочники.ВидыКонтактнойИнформации.EmailПартнера);
ЭлПисьмо.СписокПолучателейПисьма = ПолучательАдрес;

// Формируем тему письма и имя файла (замените по-своему) и записываем файл xls
ИмяАгента = СокрЛП(ВыбАгент);
Тема = "Заказ " + СокрЛП(ОбъектДок.Партнер) + " (Полифарб, "+ИмяАгента+")";
НаименованиеФайла = "Заказ " + СокрЛП(ОбъектДок.Контрагент) + " от " + ИмяАгента + " " + Лев(ОбъектДок.Дата,10);

//ИмяФайла = ПолучитьИмяВременногоФайла("xls"); 
ИмяФайла = КаталогВременныхФайлов()+НаименованиеФайла+".xls";
Таб.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLS);

ЭлПисьмо.Тема = Тема;
ЭлПисьмо.ЕстьВложения = Истина;

// Пример получения адреса эл. почты для пользователя
//Запрос = Новый Запрос;
//Запрос.Текст = 
// "ВЫБРАТЬ
// | УчетныеЗаписиЭлектроннойПочты.УчетнаяЗаписьЭлектроннойПочты
// |ИЗ
// | РегистрСведений.НастройкиУчетныхЗаписейЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
// |ГДЕ
// | УчетныеЗаписиЭлектроннойПочты.ОтветственныйЗаОбработкуПисем = &Пользователь";
//Запрос.УстановитьПараметр("Пользователь", ЭлПисьмо.Ответственный);
//РезЗапроса = запрос.Выполнить();
//Выборка = РезЗапроса.Выбрать();
//Если Не Выборка.Следующий() Тогда
// Возврат;
//КонецЕсли;
//ЭлПисьмо.ОтправительПредставление = Выборка.УчетнаяЗапись;
//ЭлПисьмо.УчетнаяЗапись = Выборка.УчетнаяЗапись;

УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
ЭлПисьмо.ОтправительПредставление = УчетнаяЗапись;
ЭлПисьмо.УчетнаяЗапись = УчетнаяЗапись;
ЭлПисьмо.Записать(); 

ЗафиксироватьТранзакцию();
//| Файлы.Наименование КАК ПолноеНаименование,
//| Файлы.Расширение КАК Расширение,
//| Файлы.Ссылка КАК Ссылка,
//| Файлы.ЭлектронныеЦифровыеПодписи.(
//| НомерСтроки,
//| Подпись
//| ),
//| Файлы.ИДФайлаЭлектронногоПисьма
//|ИЗ
//| Справочник.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы КАК Файлы
//|ГДЕ
//| Файлы.ВладелецФайла = &ВладелецФайла";

// Формируем вложение 
Спр = Справочники.ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы.СоздатьЭлемент();
Спр.ВладелецФайла = ЭлПисьмо.Ссылка;
Спр.Наименование = НаименованиеФайла;
Спр.Расширение = "pdf";

Данные = Новый ДвоичныеДанные(ИмяФайла);
ПозицияСимвола = Найти(ИмяФайла, ".pdf");
ИмяБезРазш = Лев(ИмяФайла, ПозицияСимвола - 1);
АдресДанных = ПоместитьВоВременноеХранилище(Данные);

ПараметрыФайла = Новый Структура("ВладелецФайлов,ИмяБезРасширения,РасширениеБезТочки,ВремяИзмененияУниверсальное,Автор",
	ЭлПисьмо.Ссылка, ИмяБезРазш, "pdf", ТекущаяДатаСеанса(), Пользователи.ТекущийПользователь());
РаботаСФайлами.ДобавитьФайл(ПараметрыФайла,АдресДанных);

соотвВложения = Новый Соответствие; 
соотвВложения.Вставить(НаименованиеФайла+".xls", Данные); 

// Заполняем параметры письма и отправляем
ПараметрыПисьма = Новый Структура;
ПараметрыПисьма.Вставить("Тема", Тема);
ПараметрыПисьма.Вставить("Тело", НСтр("ru = 'Это сообщение отправлено подсистемой электронной почты 1С:Предприятие'"));
ПараметрыПисьма.Вставить("Кому", ПолучательАдрес);
ПараметрыПисьма.Вставить("Вложения", соотвВложения);

ИдентификаторПисьма = ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(ЭлПисьмо.УчетнаяЗапись, ПараметрыПисьма);
