До этого записываем с троки дерева в колонку УровеньГруппировки нужные цифры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УровниВидимостиПолей = Новый Структура;
	
	УровниВидимостиПолей.Вставить("Номенклатура",	   2);
	УровниВидимостиПолей.Вставить("КодОТ_7",	       2);
	УровниВидимостиПолей.Вставить("ПЛД",			   2);
	УровниВидимостиПолей.Вставить("ПЛДАкционный",	   2);
	УровниВидимостиПолей.Вставить("РазмерКомпенсации", 2);
	
	УстановитьВидимостьПолейПоУровнюВГруппировке(УровниВидимостиПолей, "ЦеновойКоридор");  
	
	УровниВидимостиПолей = Новый Структура;
	
	УровниВидимостиПолей.Вставить("Участок", 			1);
	УровниВидимостиПолей.Вставить("ПроцентЗатрат", 		1);
	
	УстановитьВидимостьПолейПоУровнюВГруппировкеВерхнегоУровня(УровниВидимостиПолей,"ЦеновойКоридор");

	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПолейПоУровнюВГруппировке(УровниВидимостиПолей, ИмяТаблицы)
	
	Для Каждого КлючИЗначение Из УровниВидимостиПолей Цикл
		
		ИмяПоля = КлючИЗначение.Ключ;
		ДоступныйУровень = КлючИЗначение.Значение;
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		ЭлементУО.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ИмяПоля);
		ОформляемоеПоле.Использование = Истина;
		
		ЭлОтбораДанных = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы+".УровеньГруппировки");
		ЭлОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлОтбораДанных.ПравоеЗначение = ДоступныйУровень;
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

 &НаСервере
Процедура УстановитьВидимостьПолейПоУровнюВГруппировкеВерхнегоУровня(УровниВидимостиПолей, ИмяТаблицы)
	
	Для Каждого КлючИЗначение Из УровниВидимостиПолей Цикл
		
		ИмяПоля = КлючИЗначение.Ключ;
		ДоступныйУровень = КлючИЗначение.Значение;
		
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		ЭлементУО.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы + ИмяПоля);
		ОформляемоеПоле.Использование = Истина;
		
		ГруппаИ = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		ГруппаИ.Использование = Истина;	
		
		ЭлОтбораДанных = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы+".УровеньГруппировки");
		ЭлОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
		ЭлОтбораДанных = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы+".УровеньГруппировки");
		ЭлОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
		ЭлОтбораДанных.ПравоеЗначение = 1;
		
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
	КонецЦикла;
	
КонецПроцедуры
